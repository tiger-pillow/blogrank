{"ast":null,"code":"import _slicedToArray from \"/Users/gladys/Desktop/blogrank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gladys/Desktop/blogrank/client/src/components/BlogCard2.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport GridSystem from './gridSystem';\nimport { Card, Button } from 'react-bootstrap';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport './components.css';\nimport axios from 'axios';\n\nvar BlogCard2 = function BlogCard2() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  console.log(\"original items is\", items);\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      upvotes = _useState4[0],\n      setUpvotes = _useState4[1];\n\n  useEffect(function () {\n    // get the list of cards to Items\n    axios.get(\"http://localhost:4000/getAllBlogs\").then(function (response) {\n      setItems(response.data);\n      console.log(\"items\", items);\n    }).catch(function () {\n      console.log('ERR inside useEffect');\n    });\n  }, []);\n\n  var upVote = function upVote(id) {\n    console.log(\"inside upVote function\", id);\n    axios.put('http://localhost:4000/incrementUpvote', {\n      id: id\n    }).then(function () {\n      console.log(\"updated vote, not refreshing yet\");\n    });\n  };\n\n  var makeCard = function makeCard(item) {\n    return /*#__PURE__*/React.createElement(Card, {\n      className: \"Card\",\n      key: item._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      as: \"h5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, item.name), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, \"by: \", item.author, \" \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 31\n      }\n    }), \"comments: \", /*#__PURE__*/React.createElement(\"ul\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 23\n      }\n    }, \" \", item.comments.map(function (oneComment) {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 61\n        }\n      }, \" \", oneComment);\n    }), \" \"), \"upvotes: \", item.upvotes), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: function onClick() {\n        upVote(item._id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, \" \", /*#__PURE__*/React.createElement(ThumbUpIcon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 57\n      }\n    }), \" Like! \")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(GridSystem, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, items.map(function (item) {\n    return makeCard(item);\n  })));\n};\n\nexport default BlogCard2;","map":{"version":3,"sources":["/Users/gladys/Desktop/blogrank/client/src/components/BlogCard2.js"],"names":["React","useEffect","useState","GridSystem","Card","Button","ThumbUpIcon","axios","BlogCard2","items","setItems","console","log","upvotes","setUpvotes","get","then","response","data","catch","upVote","id","put","makeCard","item","_id","name","author","comments","map","oneComment"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport GridSystem from './gridSystem';\nimport { Card, Button } from 'react-bootstrap';\nimport ThumbUpIcon from '@mui/icons-material/ThumbUp';\nimport './components.css'\nimport axios from 'axios';\n\nconst BlogCard2 = () => {\n  const [items, setItems] = useState([]);\n  console.log(\"original items is\", items);\n  const [upvotes, setUpvotes] = useState([]); \n\n  useEffect(() => { // get the list of cards to Items\n    axios.get(\"http://localhost:4000/getAllBlogs\")\n      .then((response) => {\n        setItems(response.data)\n        console.log(\"items\", items);\n      })\n      .catch(() => {\n        console.log('ERR inside useEffect');\n      });\n  }, []); \n\n\n  const upVote = (id) => {\n    console.log(\"inside upVote function\", id);\n    axios.put('http://localhost:4000/incrementUpvote', { id: id })\n      .then(()=>{\n        console.log(\"updated vote, not refreshing yet\")\n    })\n  }\n\n  const makeCard = (item) => {\n    return(\n      <Card className='Card' key={item._id}>\n        <Card.Header as=\"h5\">{item.name}</Card.Header>\n        <Card.Body>\n          <Card.Text>\n            by: {item.author} <br></br>\n            comments: <ul> {item.comments.map(oneComment => <li> {oneComment}</li>\n            )} </ul>\n            upvotes: {item.upvotes}\n          </Card.Text>\n          <br></br>\n          <Button onClick={() => { upVote(item._id) }}> <ThumbUpIcon /> Like! </Button>\n        </Card.Body>\n      </Card>\n    )\n  }\n\n  return (\n      <div>\n        <GridSystem>\n          {\n            items.map(item => makeCard(item))\n          }\n        </GridSystem>\n      </div>\n  )\n}\n\nexport default BlogCard2; "]},"metadata":{},"sourceType":"module"}