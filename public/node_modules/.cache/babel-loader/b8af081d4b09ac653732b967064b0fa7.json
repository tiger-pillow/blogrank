{"ast":null,"code":"import _regeneratorRuntime from \"/Users/gladys/Desktop/blogrank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/gladys/Desktop/blogrank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/gladys/Desktop/blogrank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gladys/Desktop/blogrank/client/src/components/BlogCard.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport GridSystem from './gridSystem';\n\nvar BlogCard = function BlogCard() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  useEffect(function () {\n    fetchBlogs();\n  }, []);\n\n  var fetchBlogs = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data, items;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/getAllBlogs');\n\n            case 2:\n              data = _context.sent;\n              _context.next = 5;\n              return data.json();\n\n            case 5:\n              items = _context.sent;\n              setItems(items);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function fetchBlogs() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var renderCard = function renderCard(item) {\n    return /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      as: \"h5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, item.name), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, item.name), /*#__PURE__*/React.createElement(Card.Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }, \"the author is \", item.author), /*#__PURE__*/React.createElement(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"upvotes \", item.upvote, \" \")));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"container-md pt-5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GridSystem, {\n    colCount: 2,\n    md: 6,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, items.map(function (item) {\n    return renderCard(item);\n  })));\n};\n\nexport default BlogCard;","map":{"version":3,"sources":["/Users/gladys/Desktop/blogrank/client/src/components/BlogCard.js"],"names":["React","useEffect","useState","Card","Button","GridSystem","BlogCard","items","setItems","fetchBlogs","fetch","data","json","renderCard","item","name","author","upvote","map"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA4C,OAA5C;AACA,SAAQC,IAAR,EAAcC,MAAd,QAA2B,iBAA3B;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAAA,kBAEKJ,QAAQ,CAAC,EAAD,CAFb;AAAA;AAAA,MAEdK,KAFc;AAAA,MAEPC,QAFO;;AAGrBP,EAAAA,SAAS,CAAC,YAAM;AACdQ,IAAAA,UAAU;AACX,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,UAAU;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACEC,KAAK,CAAC,cAAD,CADP;;AAAA;AACXC,cAAAA,IADW;AAAA;AAAA,qBAEGA,IAAI,CAACC,IAAL,EAFH;;AAAA;AAEXL,cAAAA,KAFW;AAGjBC,cAAAA,QAAQ,CAACD,KAAD,CAAR;;AAHiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVE,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAMA,MAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAS;AAC1B,wBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsBA,IAAI,CAACC,IAA3B,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAaD,IAAI,CAACC,IAAlB,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBACiBD,IAAI,CAACE,MADtB,CAFF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAME,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAmCF,IAAI,CAACG,MAAxC,MANF,CAFF,CADF;AAaD,GAdD;;AAgBA,sBACE;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,QAAQ,EAAE,CAAtB;AAAyB,IAAA,EAAE,EAAE,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIV,KAAK,CAACW,GAAN,CAAU,UAAAJ,IAAI;AAAA,WAAKD,UAAU,CAACC,IAAD,CAAf;AAAA,GAAd,CAFJ,CADF,CADF;AASD,CAtCD;;AAwCA,eAAeR,QAAf","sourcesContent":["import React, { useEffect, useState }  from 'react';\nimport {Card, Button} from 'react-bootstrap';\nimport GridSystem from './gridSystem';\n\nconst BlogCard = () => { \n\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    fetchBlogs();\n  }, []);\n\n  const fetchBlogs = async() => {\n    const data = await fetch('/getAllBlogs');\n    const items = await data.json();\n    setItems(items);\n  };\n\n  const renderCard = (item) =>{\n    return (\n      <Card>\n        <Card.Header as=\"h5\">{item.name}</Card.Header>\n        <Card.Body>\n          <Card.Title>{item.name}</Card.Title>\n          <Card.Text>\n            the author is {item.author}\n          </Card.Text>\n          <br></br>\n          <Button variant=\"primary\">upvotes {item.upvote} </Button>\n        </Card.Body>\n      </Card>\n    )\n  }\n\n  return (\n    <div class=\"container-md pt-5\">\n      <GridSystem colCount={2} md={6}>\n        { \n          items.map(item => (renderCard(item))) \n        }\n      </GridSystem>\n    </div>\n  )\n}\n\nexport default BlogCard; "]},"metadata":{},"sourceType":"module"}