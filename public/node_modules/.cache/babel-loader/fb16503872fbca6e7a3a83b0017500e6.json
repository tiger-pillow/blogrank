{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/gladys/Desktop/blogrank/client/src/components/renderCard.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport './components.css';\n\nvar RenderCard = function RenderCard(item) {\n  if (item.comments != null) {\n    item.comments.map(function (oneComment) {\n      console.log(\"one comment is\", oneComment);\n    });\n  }\n\n  console.log(\"comments are\", item.comments[0]);\n  return /*#__PURE__*/React.createElement(Card, {\n    key: item._id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    as: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, item.name), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, \"by: \", item.author, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \"upvotes \", item.upvote, \" \")));\n};\n\nexport default RenderCard;","map":{"version":3,"sources":["/Users/gladys/Desktop/blogrank/client/src/components/renderCard.js"],"names":["React","useEffect","useState","Card","Button","RenderCard","item","comments","map","oneComment","console","log","_id","name","author","upvote"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAO,kBAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAC3B,MAAIA,IAAI,CAACC,QAAL,IAAiB,IAArB,EAA0B;AACxBD,IAAAA,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,UAAAC,UAAU,EAAI;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,UAA9B;AACD,KAFC;AAGH;;AACCC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,IAAI,CAACC,QAAL,CAAc,CAAd,CAA5B;AACA,sBACE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAED,IAAI,CAACM,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBN,IAAI,CAACO,IAA3B,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACOP,IAAI,CAACQ,MADZ,oBACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpB,CADF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAmCR,IAAI,CAACS,MAAxC,MAXF,CAFF,CADF;AAkBD,CAzBD;;AA2BA,eAAeV,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport './components.css'\n\nconst RenderCard = (item) => {\n  if (item.comments != null){\n    item.comments.map(oneComment => {\n    console.log(\"one comment is\", oneComment);\n  })\n}\n  console.log(\"comments are\", item.comments[0]);\n  return (\n    <Card key={item._id}>\n      <Card.Header as=\"h5\">{item.name}</Card.Header>\n      <Card.Body>\n        <Card.Text>\n          by: {item.author} <br></br>\n          {/* comment: {item.comments.map((oneComment)=>{\n            return (\n              { oneComment }\n              )\n          })} */}\n        </Card.Text> \n          \n        <br></br>\n        <Button variant=\"primary\">upvotes {item.upvote} </Button>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default RenderCard; "]},"metadata":{},"sourceType":"module"}