{"ast":null,"code":"import _slicedToArray from \"/Users/gladys/Desktop/blogrank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/gladys/Desktop/blogrank/client/src/pages/test.js\";\nimport { React, useState, useEffect } from 'react';\n\nfunction Test() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      htmlText = _useState2[0],\n      setHtmlText = _useState2[1];\n\n  useEffect(function () {\n    // get the html from backend\n    axios.get(\"http://localhost:4000/getsavedpage\").then(function (response) {\n      setHtmlText(response.data);\n    }).catch(function () {\n      console.log('failed to get HTML string');\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    dangerouslySetInnerHTML: iframe(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Test;","map":{"version":3,"sources":["/Users/gladys/Desktop/blogrank/client/src/pages/test.js"],"names":["React","useState","useEffect","Test","htmlText","setHtmlText","axios","get","then","response","data","catch","console","log","iframe"],"mappings":";;AAAA,SAAQA,KAAR,EAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAGA,SAASC,IAAT,GAAiB;AAAA,kBACiBF,QAAQ,EADzB;AAAA;AAAA,MACRG,QADQ;AAAA,MACEC,WADF;;AAEfH,EAAAA,SAAS,CAAC,YAAM;AAAE;AAChBI,IAAAA,KAAK,CAACC,GAAN,CAAU,oCAAV,EACGC,IADH,CACQ,UAACC,QAAD,EAAc;AAClBJ,MAAAA,WAAW,CAACI,QAAQ,CAACC,IAAV,CAAX;AACD,KAHH,EAIGC,KAJH,CAIS,YAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAYA,sBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AAAK,IAAA,uBAAuB,EAAEC,MAAM,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH;AAKD;;AAED,eAAeX,IAAf","sourcesContent":["import {React, useState, useEffect} from 'react';\n\n\nfunction Test () {\n  const [htmlText, setHtmlText] = useState();\n  useEffect(() => { // get the html from backend\n    axios.get(\"http://localhost:4000/getsavedpage\")\n      .then((response) => {\n        setHtmlText(response.data)\n      })\n      .catch(() => {\n        console.log('failed to get HTML string');\n      });\n  }, []); \n\n\n\n  return (\n     <div>\n      <div dangerouslySetInnerHTML={iframe()} />\n    </div>\n  )\n}\n\nexport default Test; "]},"metadata":{},"sourceType":"module"}