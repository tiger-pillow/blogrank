{"ast":null,"code":"import _readOnlyError from \"/Users/gladys/Desktop/blogrank/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/gladys/Desktop/blogrank/client/src/components/renderCard.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport './components.css';\n\nvar RenderCard = function RenderCard(item) {\n  var comments_for_display = [];\n\n  if (item.comments != null) {\n    item.comments.map(function (oneComment) {\n      console.log(\"one comment is\", oneComment);\n    });\n    item.comments.map(function (oneComment) {\n      /*#__PURE__*/\n      React.createElement(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 7\n        }\n      }, \" \", oneComment);\n    }), _readOnlyError(\"comments_for_display\");\n  }\n\n  return /*#__PURE__*/React.createElement(Card, {\n    key: item._id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    as: \"h5\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, item.name), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, \"by: \", item.author, \" \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 29\n    }\n  }), \"comments: \", comments_for_display), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"upvotes \", item.upvote, \" \")));\n};\n\nexport default RenderCard;","map":{"version":3,"sources":["/Users/gladys/Desktop/blogrank/client/src/components/renderCard.js"],"names":["React","useEffect","useState","Card","Button","RenderCard","item","comments_for_display","comments","map","oneComment","console","log","_id","name","author","upvote"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,iBAA7B;AACA,OAAO,kBAAP;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAC3B,MAAMC,oBAAoB,GAAG,EAA7B;;AACA,MAAID,IAAI,CAACE,QAAL,IAAiB,IAArB,EAA0B;AACxBF,IAAAA,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAkB,UAAAC,UAAU,EAAI;AAChCC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,UAA9B;AACG,KAFH;AAGuBJ,IAAAA,IAAI,CAACE,QAAL,CAAcC,GAAd,CAAkB,UAAAC,UAAU,EAAI;AACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAMA,UAAN;AACD,KAFsB,CAAvB;AAGH;;AACC,sBACE,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEJ,IAAI,CAACO,GAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,EAAE,EAAC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsBP,IAAI,CAACQ,IAA3B,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACOR,IAAI,CAACS,MADZ,oBACoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADpB,gBAEaR,oBAFb,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAmCD,IAAI,CAACU,MAAxC,MAPF,CAFF,CADF;AAcD,CAxBD;;AA0BA,eAAeX,UAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Button } from 'react-bootstrap';\nimport './components.css'\n\nconst RenderCard = (item) => {\n  const comments_for_display = []; \n  if (item.comments != null){\n    item.comments.map(oneComment => {\n    console.log(\"one comment is\", oneComment);\n      });\n    comments_for_display = item.comments.map(oneComment => {\n      <li> {oneComment}</li>\n    })\n}\n  return (\n    <Card key={item._id}>\n      <Card.Header as=\"h5\">{item.name}</Card.Header>\n      <Card.Body>\n        <Card.Text>\n          by: {item.author} <br></br>\n          comments: {comments_for_display}\n        </Card.Text> \n          \n        <br></br>\n        <Button variant=\"primary\">upvotes {item.upvote} </Button>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default RenderCard; "]},"metadata":{},"sourceType":"module"}